{"version":3,"sources":["../../../../qreact-app/node_modules/oauth-sign/index.js"],"names":["crypto","require","qs","sha1","key","body","createHmac","update","digest","rsa","createSign","sign","rfc3986","str","encodeURIComponent","replace","map","obj","val","arr","Array","isArray","i","length","push","prop","compare","a","b","generateBase","httpMethod","base_uri","params","normalized","p","sort","join","base","toUpperCase","hmacsign","consumer_secret","token_secret","rsasign","private_key","plaintext","signMethod","method","skipArgs","Error","apply","slice","call","arguments","exports"],"mappings":"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","file":"index.js","sourcesContent":["var crypto = require('crypto')\n  , qs = require('querystring')\n  ;\n\nfunction sha1 (key, body) {\n  return crypto.createHmac('sha1', key).update(body).digest('base64')\n}\n\nfunction rsa (key, body) {\n  return crypto.createSign(\"RSA-SHA1\").update(body).sign(key, 'base64');\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace(/!/g,'%21')\n    .replace(/\\*/g,'%2A')\n    .replace(/\\(/g,'%28')\n    .replace(/\\)/g,'%29')\n    .replace(/'/g,'%27')\n    ;\n}\n\n// Maps object to bi-dimensional array\n// Converts { foo: 'A', bar: [ 'b', 'B' ]} to\n// [ ['foo', 'A'], ['bar', 'b'], ['bar', 'B'] ]\nfunction map (obj) {\n  var key, val, arr = []\n  for (key in obj) {\n    val = obj[key]\n    if (Array.isArray(val))\n      for (var i = 0; i < val.length; i++)\n        arr.push([key, val[i]])\n    else if (typeof val === \"object\")\n      for (var prop in val)\n        arr.push([key + '[' + prop + ']', val[prop]]);\n    else\n      arr.push([key, val])\n  }\n  return arr\n}\n\n// Compare function for sort\nfunction compare (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nfunction generateBase (httpMethod, base_uri, params) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n\n  // Parameter normalization\n  // http://tools.ietf.org/html/rfc5849#section-3.4.1.3.2\n  var normalized = map(params)\n  // 1.  First, the name and value of each parameter are encoded\n  .map(function (p) {\n    return [ rfc3986(p[0]), rfc3986(p[1] || '') ]\n  })\n  // 2.  The parameters are sorted by name, using ascending byte value\n  //     ordering.  If two or more parameters share the same name, they\n  //     are sorted by their value.\n  .sort(function (a, b) {\n    return compare(a[0], b[0]) || compare(a[1], b[1])\n  })\n  // 3.  The name of each parameter is concatenated to its corresponding\n  //     value using an \"=\" character (ASCII code 61) as a separator, even\n  //     if the value is empty.\n  .map(function (p) { return p.join('=') })\n   // 4.  The sorted name/value pairs are concatenated together into a\n   //     single string by using an \"&\" character (ASCII code 38) as\n   //     separator.\n  .join('&')\n\n  var base = [\n    rfc3986(httpMethod ? httpMethod.toUpperCase() : 'GET'),\n    rfc3986(base_uri),\n    rfc3986(normalized)\n  ].join('&')\n\n  return base\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return sha1(key, base)\n}\n\nfunction rsasign (httpMethod, base_uri, params, private_key, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = private_key || ''\n\n  return rsa(key, base)\n}\n\nfunction plaintext (consumer_secret, token_secret) {\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return key\n}\n\nfunction sign (signMethod, httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var method\n  var skipArgs = 1\n\n  switch (signMethod) {\n    case 'RSA-SHA1':\n      method = rsasign\n      break\n    case 'HMAC-SHA1':\n      method = hmacsign\n      break\n    case 'PLAINTEXT':\n      method = plaintext\n      skipArgs = 4\n      break\n    default:\n     throw new Error(\"Signature method not supported: \" + signMethod)\n  }\n\n  return method.apply(null, [].slice.call(arguments, skipArgs))\n}\n\nexports.hmacsign = hmacsign\nexports.rsasign = rsasign\nexports.plaintext = plaintext\nexports.sign = sign\nexports.rfc3986 = rfc3986\nexports.generateBase = generateBase\n\n"]}