{"version":3,"sources":["../../../../../qreact-app/node_modules/uglify-js/lib/transform.js"],"names":["TreeTransformer","before","after","TreeWalker","call","prototype","undefined","_","node","descend","DEFMETHOD","tw","in_list","x","y","push","stack","length","pop","do_list","list","MAP","transform","AST_Node","noop","AST_LabeledStatement","self","label","body","AST_SimpleStatement","AST_Block","AST_DWLoop","condition","AST_For","init","step","AST_ForIn","object","AST_With","expression","AST_Exit","value","AST_LoopControl","AST_If","alternative","AST_Switch","AST_Case","AST_Try","bcatch","bfinally","AST_Catch","argname","AST_Definitions","definitions","AST_VarDef","name","AST_Lambda","argnames","AST_Call","args","AST_Sequence","expressions","AST_Dot","AST_Sub","property","AST_Unary","AST_Binary","left","right","AST_Conditional","consequent","AST_Array","elements","AST_Object","properties","AST_ObjectProperty"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;;AAEA;;AAEA,SAASA,eAAT,CAAyBC,MAAzB,EAAiCC,KAAjC,EAAwC;AACpCC,eAAWC,IAAX,CAAgB,IAAhB;AACA,SAAKH,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;AACDF,gBAAgBK,SAAhB,GAA4B,IAAIF,UAAJ,EAA5B;;AAEA,CAAC,UAASG,SAAT,EAAmB;;AAEhB,aAASC,CAAT,CAAWC,IAAX,EAAiBC,OAAjB,EAA0B;AACtBD,aAAKE,SAAL,CAAe,WAAf,EAA4B,UAASC,EAAT,EAAaC,OAAb,EAAqB;AAC7C,gBAAIC,CAAJ,EAAOC,CAAP;AACAH,eAAGI,IAAH,CAAQ,IAAR;AACA,gBAAIJ,GAAGV,MAAP,EAAeY,IAAIF,GAAGV,MAAH,CAAU,IAAV,EAAgBQ,OAAhB,EAAyBG,OAAzB,CAAJ;AACf,gBAAIC,MAAMP,SAAV,EAAqB;AACjB,oBAAI,CAACK,GAAGT,KAAR,EAAe;AACXW,wBAAI,IAAJ;AACAJ,4BAAQI,CAAR,EAAWF,EAAX;AACH,iBAHD,MAGO;AACHA,uBAAGK,KAAH,CAASL,GAAGK,KAAH,CAASC,MAAT,GAAkB,CAA3B,IAAgCJ,IAAI,IAApC;AACAJ,4BAAQI,CAAR,EAAWF,EAAX;AACAG,wBAAIH,GAAGT,KAAH,CAASW,CAAT,EAAYD,OAAZ,CAAJ;AACA,wBAAIE,MAAMR,SAAV,EAAqBO,IAAIC,CAAJ;AACxB;AACJ;AACDH,eAAGO,GAAH,CAAO,IAAP;AACA,mBAAOL,CAAP;AACH,SAjBD;AAkBH;;AAED,aAASM,OAAT,CAAiBC,IAAjB,EAAuBT,EAAvB,EAA2B;AACvB,eAAOU,IAAID,IAAJ,EAAU,UAASZ,IAAT,EAAc;AAC3B,mBAAOA,KAAKc,SAAL,CAAeX,EAAf,EAAmB,IAAnB,CAAP;AACH,SAFM,CAAP;AAGH;;AAEDJ,MAAEgB,QAAF,EAAYC,IAAZ;;AAEAjB,MAAEkB,oBAAF,EAAwB,UAASC,IAAT,EAAef,EAAf,EAAkB;AACtCe,aAAKC,KAAL,GAAaD,KAAKC,KAAL,CAAWL,SAAX,CAAqBX,EAArB,CAAb;AACAe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACH,KAHD;;AAKAJ,MAAEsB,mBAAF,EAAuB,UAASH,IAAT,EAAef,EAAf,EAAkB;AACrCe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACH,KAFD;;AAIAJ,MAAEuB,SAAF,EAAa,UAASJ,IAAT,EAAef,EAAf,EAAkB;AAC3Be,aAAKE,IAAL,GAAYT,QAAQO,KAAKE,IAAb,EAAmBjB,EAAnB,CAAZ;AACH,KAFD;;AAIAJ,MAAEwB,UAAF,EAAc,UAASL,IAAT,EAAef,EAAf,EAAkB;AAC5Be,aAAKM,SAAL,GAAiBN,KAAKM,SAAL,CAAeV,SAAf,CAAyBX,EAAzB,CAAjB;AACAe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACH,KAHD;;AAKAJ,MAAE0B,OAAF,EAAW,UAASP,IAAT,EAAef,EAAf,EAAkB;AACzB,YAAIe,KAAKQ,IAAT,EAAeR,KAAKQ,IAAL,GAAYR,KAAKQ,IAAL,CAAUZ,SAAV,CAAoBX,EAApB,CAAZ;AACf,YAAIe,KAAKM,SAAT,EAAoBN,KAAKM,SAAL,GAAiBN,KAAKM,SAAL,CAAeV,SAAf,CAAyBX,EAAzB,CAAjB;AACpB,YAAIe,KAAKS,IAAT,EAAeT,KAAKS,IAAL,GAAYT,KAAKS,IAAL,CAAUb,SAAV,CAAoBX,EAApB,CAAZ;AACfe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACH,KALD;;AAOAJ,MAAE6B,SAAF,EAAa,UAASV,IAAT,EAAef,EAAf,EAAkB;AAC3Be,aAAKQ,IAAL,GAAYR,KAAKQ,IAAL,CAAUZ,SAAV,CAAoBX,EAApB,CAAZ;AACAe,aAAKW,MAAL,GAAcX,KAAKW,MAAL,CAAYf,SAAZ,CAAsBX,EAAtB,CAAd;AACAe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACH,KAJD;;AAMAJ,MAAE+B,QAAF,EAAY,UAASZ,IAAT,EAAef,EAAf,EAAkB;AAC1Be,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACAe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACH,KAHD;;AAKAJ,MAAEiC,QAAF,EAAY,UAASd,IAAT,EAAef,EAAf,EAAkB;AAC1B,YAAIe,KAAKe,KAAT,EAAgBf,KAAKe,KAAL,GAAaf,KAAKe,KAAL,CAAWnB,SAAX,CAAqBX,EAArB,CAAb;AACnB,KAFD;;AAIAJ,MAAEmC,eAAF,EAAmB,UAAShB,IAAT,EAAef,EAAf,EAAkB;AACjC,YAAIe,KAAKC,KAAT,EAAgBD,KAAKC,KAAL,GAAaD,KAAKC,KAAL,CAAWL,SAAX,CAAqBX,EAArB,CAAb;AACnB,KAFD;;AAIAJ,MAAEoC,MAAF,EAAU,UAASjB,IAAT,EAAef,EAAf,EAAkB;AACxBe,aAAKM,SAAL,GAAiBN,KAAKM,SAAL,CAAeV,SAAf,CAAyBX,EAAzB,CAAjB;AACAe,aAAKE,IAAL,GAAYF,KAAKE,IAAL,CAAUN,SAAV,CAAoBX,EAApB,CAAZ;AACA,YAAIe,KAAKkB,WAAT,EAAsBlB,KAAKkB,WAAL,GAAmBlB,KAAKkB,WAAL,CAAiBtB,SAAjB,CAA2BX,EAA3B,CAAnB;AACzB,KAJD;;AAMAJ,MAAEsC,UAAF,EAAc,UAASnB,IAAT,EAAef,EAAf,EAAkB;AAC5Be,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACAe,aAAKE,IAAL,GAAYT,QAAQO,KAAKE,IAAb,EAAmBjB,EAAnB,CAAZ;AACH,KAHD;;AAKAJ,MAAEuC,QAAF,EAAY,UAASpB,IAAT,EAAef,EAAf,EAAkB;AAC1Be,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACAe,aAAKE,IAAL,GAAYT,QAAQO,KAAKE,IAAb,EAAmBjB,EAAnB,CAAZ;AACH,KAHD;;AAKAJ,MAAEwC,OAAF,EAAW,UAASrB,IAAT,EAAef,EAAf,EAAkB;AACzBe,aAAKE,IAAL,GAAYT,QAAQO,KAAKE,IAAb,EAAmBjB,EAAnB,CAAZ;AACA,YAAIe,KAAKsB,MAAT,EAAiBtB,KAAKsB,MAAL,GAActB,KAAKsB,MAAL,CAAY1B,SAAZ,CAAsBX,EAAtB,CAAd;AACjB,YAAIe,KAAKuB,QAAT,EAAmBvB,KAAKuB,QAAL,GAAgBvB,KAAKuB,QAAL,CAAc3B,SAAd,CAAwBX,EAAxB,CAAhB;AACtB,KAJD;;AAMAJ,MAAE2C,SAAF,EAAa,UAASxB,IAAT,EAAef,EAAf,EAAkB;AAC3Be,aAAKyB,OAAL,GAAezB,KAAKyB,OAAL,CAAa7B,SAAb,CAAuBX,EAAvB,CAAf;AACAe,aAAKE,IAAL,GAAYT,QAAQO,KAAKE,IAAb,EAAmBjB,EAAnB,CAAZ;AACH,KAHD;;AAKAJ,MAAE6C,eAAF,EAAmB,UAAS1B,IAAT,EAAef,EAAf,EAAkB;AACjCe,aAAK2B,WAAL,GAAmBlC,QAAQO,KAAK2B,WAAb,EAA0B1C,EAA1B,CAAnB;AACH,KAFD;;AAIAJ,MAAE+C,UAAF,EAAc,UAAS5B,IAAT,EAAef,EAAf,EAAkB;AAC5Be,aAAK6B,IAAL,GAAY7B,KAAK6B,IAAL,CAAUjC,SAAV,CAAoBX,EAApB,CAAZ;AACA,YAAIe,KAAKe,KAAT,EAAgBf,KAAKe,KAAL,GAAaf,KAAKe,KAAL,CAAWnB,SAAX,CAAqBX,EAArB,CAAb;AACnB,KAHD;;AAKAJ,MAAEiD,UAAF,EAAc,UAAS9B,IAAT,EAAef,EAAf,EAAkB;AAC5B,YAAIe,KAAK6B,IAAT,EAAe7B,KAAK6B,IAAL,GAAY7B,KAAK6B,IAAL,CAAUjC,SAAV,CAAoBX,EAApB,CAAZ;AACfe,aAAK+B,QAAL,GAAgBtC,QAAQO,KAAK+B,QAAb,EAAuB9C,EAAvB,CAAhB;AACAe,aAAKE,IAAL,GAAYT,QAAQO,KAAKE,IAAb,EAAmBjB,EAAnB,CAAZ;AACH,KAJD;;AAMAJ,MAAEmD,QAAF,EAAY,UAAShC,IAAT,EAAef,EAAf,EAAkB;AAC1Be,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACAe,aAAKiC,IAAL,GAAYxC,QAAQO,KAAKiC,IAAb,EAAmBhD,EAAnB,CAAZ;AACH,KAHD;;AAKAJ,MAAEqD,YAAF,EAAgB,UAASlC,IAAT,EAAef,EAAf,EAAkB;AAC9Be,aAAKmC,WAAL,GAAmB1C,QAAQO,KAAKmC,WAAb,EAA0BlD,EAA1B,CAAnB;AACH,KAFD;;AAIAJ,MAAEuD,OAAF,EAAW,UAASpC,IAAT,EAAef,EAAf,EAAkB;AACzBe,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACH,KAFD;;AAIAJ,MAAEwD,OAAF,EAAW,UAASrC,IAAT,EAAef,EAAf,EAAkB;AACzBe,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACAe,aAAKsC,QAAL,GAAgBtC,KAAKsC,QAAL,CAAc1C,SAAd,CAAwBX,EAAxB,CAAhB;AACH,KAHD;;AAKAJ,MAAE0D,SAAF,EAAa,UAASvC,IAAT,EAAef,EAAf,EAAkB;AAC3Be,aAAKa,UAAL,GAAkBb,KAAKa,UAAL,CAAgBjB,SAAhB,CAA0BX,EAA1B,CAAlB;AACH,KAFD;;AAIAJ,MAAE2D,UAAF,EAAc,UAASxC,IAAT,EAAef,EAAf,EAAkB;AAC5Be,aAAKyC,IAAL,GAAYzC,KAAKyC,IAAL,CAAU7C,SAAV,CAAoBX,EAApB,CAAZ;AACAe,aAAK0C,KAAL,GAAa1C,KAAK0C,KAAL,CAAW9C,SAAX,CAAqBX,EAArB,CAAb;AACH,KAHD;;AAKAJ,MAAE8D,eAAF,EAAmB,UAAS3C,IAAT,EAAef,EAAf,EAAkB;AACjCe,aAAKM,SAAL,GAAiBN,KAAKM,SAAL,CAAeV,SAAf,CAAyBX,EAAzB,CAAjB;AACAe,aAAK4C,UAAL,GAAkB5C,KAAK4C,UAAL,CAAgBhD,SAAhB,CAA0BX,EAA1B,CAAlB;AACAe,aAAKkB,WAAL,GAAmBlB,KAAKkB,WAAL,CAAiBtB,SAAjB,CAA2BX,EAA3B,CAAnB;AACH,KAJD;;AAMAJ,MAAEgE,SAAF,EAAa,UAAS7C,IAAT,EAAef,EAAf,EAAkB;AAC3Be,aAAK8C,QAAL,GAAgBrD,QAAQO,KAAK8C,QAAb,EAAuB7D,EAAvB,CAAhB;AACH,KAFD;;AAIAJ,MAAEkE,UAAF,EAAc,UAAS/C,IAAT,EAAef,EAAf,EAAkB;AAC5Be,aAAKgD,UAAL,GAAkBvD,QAAQO,KAAKgD,UAAb,EAAyB/D,EAAzB,CAAlB;AACH,KAFD;;AAIAJ,MAAEoE,kBAAF,EAAsB,UAASjD,IAAT,EAAef,EAAf,EAAkB;AACpCe,aAAKe,KAAL,GAAaf,KAAKe,KAAL,CAAWnB,SAAX,CAAqBX,EAArB,CAAb;AACH,KAFD;AAIH,CAlKD","file":"transform.js","sourcesContent":["/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n\n// Tree transformer helpers.\n\nfunction TreeTransformer(before, after) {\n    TreeWalker.call(this);\n    this.before = before;\n    this.after = after;\n}\nTreeTransformer.prototype = new TreeWalker;\n\n(function(undefined){\n\n    function _(node, descend) {\n        node.DEFMETHOD(\"transform\", function(tw, in_list){\n            var x, y;\n            tw.push(this);\n            if (tw.before) x = tw.before(this, descend, in_list);\n            if (x === undefined) {\n                if (!tw.after) {\n                    x = this;\n                    descend(x, tw);\n                } else {\n                    tw.stack[tw.stack.length - 1] = x = this;\n                    descend(x, tw);\n                    y = tw.after(x, in_list);\n                    if (y !== undefined) x = y;\n                }\n            }\n            tw.pop(this);\n            return x;\n        });\n    };\n\n    function do_list(list, tw) {\n        return MAP(list, function(node){\n            return node.transform(tw, true);\n        });\n    };\n\n    _(AST_Node, noop);\n\n    _(AST_LabeledStatement, function(self, tw){\n        self.label = self.label.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_SimpleStatement, function(self, tw){\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Block, function(self, tw){\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_DWLoop, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_For, function(self, tw){\n        if (self.init) self.init = self.init.transform(tw);\n        if (self.condition) self.condition = self.condition.transform(tw);\n        if (self.step) self.step = self.step.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_ForIn, function(self, tw){\n        self.init = self.init.transform(tw);\n        self.object = self.object.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_With, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = self.body.transform(tw);\n    });\n\n    _(AST_Exit, function(self, tw){\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_LoopControl, function(self, tw){\n        if (self.label) self.label = self.label.transform(tw);\n    });\n\n    _(AST_If, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.body = self.body.transform(tw);\n        if (self.alternative) self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Switch, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Case, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Try, function(self, tw){\n        self.body = do_list(self.body, tw);\n        if (self.bcatch) self.bcatch = self.bcatch.transform(tw);\n        if (self.bfinally) self.bfinally = self.bfinally.transform(tw);\n    });\n\n    _(AST_Catch, function(self, tw){\n        self.argname = self.argname.transform(tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Definitions, function(self, tw){\n        self.definitions = do_list(self.definitions, tw);\n    });\n\n    _(AST_VarDef, function(self, tw){\n        self.name = self.name.transform(tw);\n        if (self.value) self.value = self.value.transform(tw);\n    });\n\n    _(AST_Lambda, function(self, tw){\n        if (self.name) self.name = self.name.transform(tw);\n        self.argnames = do_list(self.argnames, tw);\n        self.body = do_list(self.body, tw);\n    });\n\n    _(AST_Call, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.args = do_list(self.args, tw);\n    });\n\n    _(AST_Sequence, function(self, tw){\n        self.expressions = do_list(self.expressions, tw);\n    });\n\n    _(AST_Dot, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Sub, function(self, tw){\n        self.expression = self.expression.transform(tw);\n        self.property = self.property.transform(tw);\n    });\n\n    _(AST_Unary, function(self, tw){\n        self.expression = self.expression.transform(tw);\n    });\n\n    _(AST_Binary, function(self, tw){\n        self.left = self.left.transform(tw);\n        self.right = self.right.transform(tw);\n    });\n\n    _(AST_Conditional, function(self, tw){\n        self.condition = self.condition.transform(tw);\n        self.consequent = self.consequent.transform(tw);\n        self.alternative = self.alternative.transform(tw);\n    });\n\n    _(AST_Array, function(self, tw){\n        self.elements = do_list(self.elements, tw);\n    });\n\n    _(AST_Object, function(self, tw){\n        self.properties = do_list(self.properties, tw);\n    });\n\n    _(AST_ObjectProperty, function(self, tw){\n        self.value = self.value.transform(tw);\n    });\n\n})();\n"]}