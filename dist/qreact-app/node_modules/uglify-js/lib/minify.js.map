{"version":3,"sources":["../../../../../qreact-app/node_modules/uglify-js/lib/minify.js"],"names":["to_ascii","atob","b64","Buffer","toString","to_base64","btoa","str","read_source_map","code","match","exec","AST_Node","warn","set_shorthand","name","options","keys","forEach","key","minify","files","warn_function","defaults","compress","ie8","keep_fnames","mangle","output","parse","sourceMap","timings","toplevel","warnings","wrap","start","Date","now","cache","eval","properties","reserved","content","filename","includeSources","root","url","warning","push","AST_Toplevel","Object","length","Error","wrap_commonjs","scope1","figure_out_scope","Compressor","scope2","base54","reset","compute_char_frequency","mangle_names","mangle_properties","result","ast","HOP","JSON","source_map","SourceMap","file","orig","get","setSourceContent","stream","OutputStream","print","map","end","scope","total","ex","error"],"mappings":"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","file":"minify.js","sourcesContent":["\"use strict\";\n\nvar to_ascii = typeof atob == \"undefined\" ? function(b64) {\n    return new Buffer(b64, \"base64\").toString();\n} : atob;\nvar to_base64 = typeof btoa == \"undefined\" ? function(str) {\n    return new Buffer(str).toString(\"base64\");\n} : btoa;\n\nfunction read_source_map(code) {\n    var match = /\\n\\/\\/# sourceMappingURL=data:application\\/json(;.*?)?;base64,(.*)/.exec(code);\n    if (!match) {\n        AST_Node.warn(\"inline source map not found\");\n        return null;\n    }\n    return to_ascii(match[2]);\n}\n\nfunction set_shorthand(name, options, keys) {\n    if (options[name]) {\n        keys.forEach(function(key) {\n            if (options[key]) {\n                if (typeof options[key] != \"object\") options[key] = {};\n                if (!(name in options[key])) options[key][name] = options[name];\n            }\n        });\n    }\n}\n\nfunction minify(files, options) {\n    var warn_function = AST_Node.warn_function;\n    try {\n        options = defaults(options, {\n            compress: {},\n            ie8: false,\n            keep_fnames: false,\n            mangle: {},\n            output: {},\n            parse: {},\n            sourceMap: false,\n            timings: false,\n            toplevel: false,\n            warnings: false,\n            wrap: false,\n        }, true);\n        var timings = options.timings && {\n            start: Date.now()\n        };\n        set_shorthand(\"ie8\", options, [ \"compress\", \"mangle\", \"output\" ]);\n        set_shorthand(\"keep_fnames\", options, [ \"compress\", \"mangle\" ]);\n        set_shorthand(\"toplevel\", options, [ \"compress\", \"mangle\" ]);\n        set_shorthand(\"warnings\", options, [ \"compress\" ]);\n        if (options.mangle) {\n            options.mangle = defaults(options.mangle, {\n                cache: null,\n                eval: false,\n                ie8: false,\n                keep_fnames: false,\n                properties: false,\n                reserved: [],\n                toplevel: false,\n            }, true);\n        }\n        if (options.sourceMap) {\n            options.sourceMap = defaults(options.sourceMap, {\n                content: null,\n                filename: null,\n                includeSources: false,\n                root: null,\n                url: null,\n            }, true);\n        }\n        var warnings = [];\n        if (options.warnings && !AST_Node.warn_function) {\n            AST_Node.warn_function = function(warning) {\n                warnings.push(warning);\n            };\n        }\n        if (timings) timings.parse = Date.now();\n        var toplevel;\n        if (files instanceof AST_Toplevel) {\n            toplevel = files;\n        } else {\n            if (typeof files == \"string\") {\n                files = [ files ];\n            }\n            options.parse = options.parse || {};\n            options.parse.toplevel = null;\n            for (var name in files) {\n                options.parse.filename = name;\n                options.parse.toplevel = parse(files[name], options.parse);\n                if (options.sourceMap && options.sourceMap.content == \"inline\") {\n                    if (Object.keys(files).length > 1)\n                        throw new Error(\"inline source map only works with singular input\");\n                    options.sourceMap.content = read_source_map(files[name]);\n                }\n            }\n            toplevel = options.parse.toplevel;\n        }\n        if (options.wrap) {\n            toplevel = toplevel.wrap_commonjs(options.wrap);\n        }\n        if (timings) timings.scope1 = Date.now();\n        if (options.compress) toplevel.figure_out_scope(options.mangle);\n        if (timings) timings.compress = Date.now();\n        if (options.compress) toplevel = new Compressor(options.compress).compress(toplevel);\n        if (timings) timings.scope2 = Date.now();\n        if (options.mangle) toplevel.figure_out_scope(options.mangle);\n        if (timings) timings.mangle = Date.now();\n        if (options.mangle) {\n            base54.reset();\n            toplevel.compute_char_frequency(options.mangle);\n            toplevel.mangle_names(options.mangle);\n        }\n        if (timings) timings.properties = Date.now();\n        if (options.mangle && options.mangle.properties) {\n            toplevel = mangle_properties(toplevel, options.mangle.properties);\n        }\n        if (timings) timings.output = Date.now();\n        var result = {};\n        if (options.output.ast) {\n            result.ast = toplevel;\n        }\n        if (!HOP(options.output, \"code\") || options.output.code) {\n            if (options.sourceMap) {\n                if (typeof options.sourceMap.content == \"string\") {\n                    options.sourceMap.content = JSON.parse(options.sourceMap.content);\n                }\n                options.output.source_map = SourceMap({\n                    file: options.sourceMap.filename,\n                    orig: options.sourceMap.content,\n                    root: options.sourceMap.root\n                });\n                if (options.sourceMap.includeSources) {\n                    if (files instanceof AST_Toplevel) {\n                        throw new Error(\"original source content unavailable\");\n                    } else for (var name in files) {\n                        options.output.source_map.get().setSourceContent(name, files[name]);\n                    }\n                }\n            }\n            delete options.output.ast;\n            delete options.output.code;\n            var stream = OutputStream(options.output);\n            toplevel.print(stream);\n            result.code = stream.get();\n            if (options.sourceMap) {\n                result.map = options.output.source_map.toString();\n                if (options.sourceMap.url == \"inline\") {\n                    result.code += \"\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + to_base64(result.map);\n                } else if (options.sourceMap.url) {\n                    result.code += \"\\n//# sourceMappingURL=\" + options.sourceMap.url;\n                }\n            }\n        }\n        if (timings) {\n            timings.end = Date.now();\n            result.timings = {\n                parse: 1e-3 * (timings.scope1 - timings.parse),\n                scope: 1e-3 * (timings.compress - timings.scope1 + timings.mangle - timings.scope2),\n                compress: 1e-3 * (timings.scope2 - timings.compress),\n                mangle: 1e-3 * (timings.properties - timings.mangle),\n                properties: 1e-3 * (timings.output - timings.properties),\n                output: 1e-3 * (timings.end - timings.output),\n                total: 1e-3 * (timings.end - timings.start)\n            }\n        }\n        if (warnings.length) {\n            result.warnings = warnings;\n        }\n        return result;\n    } catch (ex) {\n        return { error: ex };\n    } finally {\n        AST_Node.warn_function = warn_function;\n    }\n}\n"]}