{"version":3,"sources":["../../../../../qreact-app/node_modules/optionator/lib/help.js"],"names":["ref$","id","find","sort","min","max","map","unlines","nameToRaw","dasherize","naturalJoin","wordwrap","getPreText","setHelpStyleDefaults","generateHelpForOption","generateHelp","require","option","arg$","maxWidth","mainName","shortNames","longNames","type","description","aliasSeparator","typeSeparator","initialIndent","names","namesString","namesStringLen","typeSeparatorString","typeSeparatorStringLen","wrap","negateName","it","length","concat","join","boolean","replace","helpStyle","descriptionSeparator","secondaryIndent","maxPadFactor","getOption","stdout","optionName","e","pre","defaultString","restPositionalString","fullDescription","that","preDescription","descriptionString","exampleString","examples","seperator","isTTY","columns","e$","message","restPositional","longDescription","sentencize","example","repeatString$","options","prepend","append","showHidden","interpolate","output","out","data","optionCount","totalPreLen","preLens","i$","len$","item","descParts","desc","preLen","sortedPreLens","maxPreLen","preLenMean","x","padAmount","descSepLen","fullWrapCount","partialWrapCount","descLen","totalLen","initialSpace","wrapAllFull","i","push","interp","hidden","heading","value","pad","str","num","len","first","rest","period","charAt","toUpperCase","slice","test","string","object","key","module","exports","n","r","call"],"mappings":"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","file":"help.js","sourcesContent":["// Generated by LiveScript 1.5.0\n(function(){\n  var ref$, id, find, sort, min, max, map, unlines, nameToRaw, dasherize, naturalJoin, wordwrap, getPreText, setHelpStyleDefaults, generateHelpForOption, generateHelp;\n  ref$ = require('prelude-ls'), id = ref$.id, find = ref$.find, sort = ref$.sort, min = ref$.min, max = ref$.max, map = ref$.map, unlines = ref$.unlines;\n  ref$ = require('./util'), nameToRaw = ref$.nameToRaw, dasherize = ref$.dasherize, naturalJoin = ref$.naturalJoin;\n  wordwrap = require('wordwrap');\n  getPreText = function(option, arg$, maxWidth){\n    var mainName, shortNames, ref$, longNames, type, description, aliasSeparator, typeSeparator, initialIndent, names, namesString, namesStringLen, typeSeparatorString, typeSeparatorStringLen, wrap;\n    mainName = option.option, shortNames = (ref$ = option.shortNames) != null\n      ? ref$\n      : [], longNames = (ref$ = option.longNames) != null\n      ? ref$\n      : [], type = option.type, description = option.description;\n    aliasSeparator = arg$.aliasSeparator, typeSeparator = arg$.typeSeparator, initialIndent = arg$.initialIndent;\n    if (option.negateName) {\n      mainName = \"no-\" + mainName;\n      if (longNames) {\n        longNames = map(function(it){\n          return \"no-\" + it;\n        }, longNames);\n      }\n    }\n    names = mainName.length === 1\n      ? [mainName].concat(shortNames, longNames)\n      : shortNames.concat([mainName], longNames);\n    namesString = map(nameToRaw, names).join(aliasSeparator);\n    namesStringLen = namesString.length;\n    typeSeparatorString = mainName === 'NUM' ? '::' : typeSeparator;\n    typeSeparatorStringLen = typeSeparatorString.length;\n    if (maxWidth != null && !option.boolean && initialIndent + namesStringLen + typeSeparatorStringLen + type.length > maxWidth) {\n      wrap = wordwrap(initialIndent + namesStringLen + typeSeparatorStringLen, maxWidth);\n      return namesString + \"\" + typeSeparatorString + wrap(type).replace(/^\\s+/, '');\n    } else {\n      return namesString + \"\" + (option.boolean\n        ? ''\n        : typeSeparatorString + \"\" + type);\n    }\n  };\n  setHelpStyleDefaults = function(helpStyle){\n    helpStyle.aliasSeparator == null && (helpStyle.aliasSeparator = ', ');\n    helpStyle.typeSeparator == null && (helpStyle.typeSeparator = ' ');\n    helpStyle.descriptionSeparator == null && (helpStyle.descriptionSeparator = '  ');\n    helpStyle.initialIndent == null && (helpStyle.initialIndent = 2);\n    helpStyle.secondaryIndent == null && (helpStyle.secondaryIndent = 4);\n    helpStyle.maxPadFactor == null && (helpStyle.maxPadFactor = 1.5);\n  };\n  generateHelpForOption = function(getOption, arg$){\n    var stdout, helpStyle, ref$;\n    stdout = arg$.stdout, helpStyle = (ref$ = arg$.helpStyle) != null\n      ? ref$\n      : {};\n    setHelpStyleDefaults(helpStyle);\n    return function(optionName){\n      var maxWidth, wrap, option, e, pre, defaultString, restPositionalString, description, fullDescription, that, preDescription, descriptionString, exampleString, examples, seperator;\n      maxWidth = stdout != null && stdout.isTTY ? stdout.columns - 1 : null;\n      wrap = maxWidth ? wordwrap(maxWidth) : id;\n      try {\n        option = getOption(dasherize(optionName));\n      } catch (e$) {\n        e = e$;\n        return e.message;\n      }\n      pre = getPreText(option, helpStyle);\n      defaultString = option['default'] && !option.negateName ? \"\\ndefault: \" + option['default'] : '';\n      restPositionalString = option.restPositional ? 'Everything after this option is considered a positional argument, even if it looks like an option.' : '';\n      description = option.longDescription || option.description && sentencize(option.description);\n      fullDescription = description && restPositionalString\n        ? description + \" \" + restPositionalString\n        : (that = description || restPositionalString) ? that : '';\n      preDescription = 'description:';\n      descriptionString = !fullDescription\n        ? ''\n        : maxWidth && fullDescription.length - 1 - preDescription.length > maxWidth\n          ? \"\\n\" + preDescription + \"\\n\" + wrap(fullDescription)\n          : \"\\n\" + preDescription + \" \" + fullDescription;\n      exampleString = (that = option.example) ? (examples = [].concat(that), examples.length > 1\n        ? \"\\nexamples:\\n\" + unlines(examples)\n        : \"\\nexample: \" + examples[0]) : '';\n      seperator = defaultString || descriptionString || exampleString ? \"\\n\" + repeatString$('=', pre.length) : '';\n      return pre + \"\" + seperator + defaultString + descriptionString + exampleString;\n    };\n  };\n  generateHelp = function(arg$){\n    var options, prepend, append, helpStyle, ref$, stdout, aliasSeparator, typeSeparator, descriptionSeparator, maxPadFactor, initialIndent, secondaryIndent;\n    options = arg$.options, prepend = arg$.prepend, append = arg$.append, helpStyle = (ref$ = arg$.helpStyle) != null\n      ? ref$\n      : {}, stdout = arg$.stdout;\n    setHelpStyleDefaults(helpStyle);\n    aliasSeparator = helpStyle.aliasSeparator, typeSeparator = helpStyle.typeSeparator, descriptionSeparator = helpStyle.descriptionSeparator, maxPadFactor = helpStyle.maxPadFactor, initialIndent = helpStyle.initialIndent, secondaryIndent = helpStyle.secondaryIndent;\n    return function(arg$){\n      var ref$, showHidden, interpolate, maxWidth, output, out, data, optionCount, totalPreLen, preLens, i$, len$, item, that, pre, descParts, desc, preLen, sortedPreLens, maxPreLen, preLenMean, x, padAmount, descSepLen, fullWrapCount, partialWrapCount, descLen, totalLen, initialSpace, wrapAllFull, i, wrap;\n      ref$ = arg$ != null\n        ? arg$\n        : {}, showHidden = ref$.showHidden, interpolate = ref$.interpolate;\n      maxWidth = stdout != null && stdout.isTTY ? stdout.columns - 1 : null;\n      output = [];\n      out = function(it){\n        return output.push(it != null ? it : '');\n      };\n      if (prepend) {\n        out(interpolate ? interp(prepend, interpolate) : prepend);\n        out();\n      }\n      data = [];\n      optionCount = 0;\n      totalPreLen = 0;\n      preLens = [];\n      for (i$ = 0, len$ = (ref$ = options).length; i$ < len$; ++i$) {\n        item = ref$[i$];\n        if (showHidden || !item.hidden) {\n          if (that = item.heading) {\n            data.push({\n              type: 'heading',\n              value: that\n            });\n          } else {\n            pre = getPreText(item, helpStyle, maxWidth);\n            descParts = [];\n            if ((that = item.description) != null) {\n              descParts.push(that);\n            }\n            if (that = item['enum']) {\n              descParts.push(\"either: \" + naturalJoin(that));\n            }\n            if (item['default'] && !item.negateName) {\n              descParts.push(\"default: \" + item['default']);\n            }\n            desc = descParts.join(' - ');\n            data.push({\n              type: 'option',\n              pre: pre,\n              desc: desc,\n              descLen: desc.length\n            });\n            preLen = pre.length;\n            optionCount++;\n            totalPreLen += preLen;\n            preLens.push(preLen);\n          }\n        }\n      }\n      sortedPreLens = sort(preLens);\n      maxPreLen = sortedPreLens[sortedPreLens.length - 1];\n      preLenMean = initialIndent + totalPreLen / optionCount;\n      x = optionCount > 2 ? min(preLenMean * maxPadFactor, maxPreLen) : maxPreLen;\n      for (i$ = sortedPreLens.length - 1; i$ >= 0; --i$) {\n        preLen = sortedPreLens[i$];\n        if (preLen <= x) {\n          padAmount = preLen;\n          break;\n        }\n      }\n      descSepLen = descriptionSeparator.length;\n      if (maxWidth != null) {\n        fullWrapCount = 0;\n        partialWrapCount = 0;\n        for (i$ = 0, len$ = data.length; i$ < len$; ++i$) {\n          item = data[i$];\n          if (item.type === 'option') {\n            pre = item.pre, desc = item.desc, descLen = item.descLen;\n            if (descLen === 0) {\n              item.wrap = 'none';\n            } else {\n              preLen = max(padAmount, pre.length) + initialIndent + descSepLen;\n              totalLen = preLen + descLen;\n              if (totalLen > maxWidth) {\n                if (descLen / 2.5 > maxWidth - preLen) {\n                  fullWrapCount++;\n                  item.wrap = 'full';\n                } else {\n                  partialWrapCount++;\n                  item.wrap = 'partial';\n                }\n              } else {\n                item.wrap = 'none';\n              }\n            }\n          }\n        }\n      }\n      initialSpace = repeatString$(' ', initialIndent);\n      wrapAllFull = optionCount > 1 && fullWrapCount + partialWrapCount * 0.5 > optionCount * 0.5;\n      for (i$ = 0, len$ = data.length; i$ < len$; ++i$) {\n        i = i$;\n        item = data[i$];\n        if (item.type === 'heading') {\n          if (i !== 0) {\n            out();\n          }\n          out(item.value + \":\");\n        } else {\n          pre = item.pre, desc = item.desc, descLen = item.descLen, wrap = item.wrap;\n          if (maxWidth != null) {\n            if (wrapAllFull || wrap === 'full') {\n              wrap = wordwrap(initialIndent + secondaryIndent, maxWidth);\n              out(initialSpace + \"\" + pre + \"\\n\" + wrap(desc));\n              continue;\n            } else if (wrap === 'partial') {\n              wrap = wordwrap(initialIndent + descSepLen + max(padAmount, pre.length), maxWidth);\n              out(initialSpace + \"\" + pad(pre, padAmount) + descriptionSeparator + wrap(desc).replace(/^\\s+/, ''));\n              continue;\n            }\n          }\n          if (descLen === 0) {\n            out(initialSpace + \"\" + pre);\n          } else {\n            out(initialSpace + \"\" + pad(pre, padAmount) + descriptionSeparator + desc);\n          }\n        }\n      }\n      if (append) {\n        out();\n        out(interpolate ? interp(append, interpolate) : append);\n      }\n      return unlines(output);\n    };\n  };\n  function pad(str, num){\n    var len, padAmount;\n    len = str.length;\n    padAmount = num - len;\n    return str + \"\" + repeatString$(' ', padAmount > 0 ? padAmount : 0);\n  }\n  function sentencize(str){\n    var first, rest, period;\n    first = str.charAt(0).toUpperCase();\n    rest = str.slice(1);\n    period = /[\\.!\\?]$/.test(str) ? '' : '.';\n    return first + \"\" + rest + period;\n  }\n  function interp(string, object){\n    return string.replace(/{{([a-zA-Z$_][a-zA-Z$_0-9]*)}}/g, function(arg$, key){\n      var ref$;\n      return (ref$ = object[key]) != null\n        ? ref$\n        : \"{{\" + key + \"}}\";\n    });\n  }\n  module.exports = {\n    generateHelp: generateHelp,\n    generateHelpForOption: generateHelpForOption\n  };\n  function repeatString$(str, n){\n    for (var r = ''; n > 0; (n >>= 1) && (str += str)) if (n & 1) r += str;\n    return r;\n  }\n}).call(this);\n"]}