{"version":3,"sources":["../../../../../qreact-app/node_modules/optionator/lib/index.js"],"names":["VERSION","ref$","id","map","compact","any","groupBy","partition","chars","isItNaN","keys","Obj","camelize","deepIs","closestString","nameToRaw","dasherize","naturalJoin","generateHelp","generateHelpForOption","parsedTypeCheck","parseType","parseLevn","camelizeKeys","parseString","main","toString$","toString","slice$","slice","require","parsedTypeParse","obj","key","value","resultObj$","string","assignOpt","regex","replaceRegex","result","this$","RegExp","it","replace","match","libOptions","opts","defaults","required","traverse","getOption","parse","call","stdout","process","positionalAnywhere","typeAliases","concatRepeatedArrays","mergeRepeatedObjects","options","i$","len$","option","name","k","v","type","that","e","parsedPossibilities","parsedType","j$","len1$","possibility","rawDependsType","dependsOpts","dependsType","cra","alias","shortNames","longNames","Error","length","heading","boolean","e$","message","parsedPossiblities","push","dependsOn","concat","toLowerCase","aliases","fn$","negateName","opt","possiblyMeant","input","arg$","positional","restPositional","overrideRequired","prop","setValue","setDefaults","checkRequired","mutuallyExclusiveError","checkMutuallyExclusive","checkDependency","checkDependencies","checkProp","args","arg","short","argName","usingAssign","val","flags","len","i","flag","valPrime","negated","noedName","currentType","oneValuePerFlag","structure","of","import$","first","second","rules","rule","present","element","k$","len2$","mutuallyExclusive","targetOptionNames","targetOptionName","targetOption","dependenciesMet","_","NUM","parseArgv","module","exports","src","own","hasOwnProperty"],"mappings":"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","file":"index.js","sourcesContent":["// Generated by LiveScript 1.5.0\n(function(){\n  var VERSION, ref$, id, map, compact, any, groupBy, partition, chars, isItNaN, keys, Obj, camelize, deepIs, closestString, nameToRaw, dasherize, naturalJoin, generateHelp, generateHelpForOption, parsedTypeCheck, parseType, parseLevn, camelizeKeys, parseString, main, toString$ = {}.toString, slice$ = [].slice;\n  VERSION = '0.8.2';\n  ref$ = require('prelude-ls'), id = ref$.id, map = ref$.map, compact = ref$.compact, any = ref$.any, groupBy = ref$.groupBy, partition = ref$.partition, chars = ref$.chars, isItNaN = ref$.isItNaN, keys = ref$.keys, Obj = ref$.Obj, camelize = ref$.camelize;\n  deepIs = require('deep-is');\n  ref$ = require('./util'), closestString = ref$.closestString, nameToRaw = ref$.nameToRaw, dasherize = ref$.dasherize, naturalJoin = ref$.naturalJoin;\n  ref$ = require('./help'), generateHelp = ref$.generateHelp, generateHelpForOption = ref$.generateHelpForOption;\n  ref$ = require('type-check'), parsedTypeCheck = ref$.parsedTypeCheck, parseType = ref$.parseType;\n  parseLevn = require('levn').parsedTypeParse;\n  camelizeKeys = function(obj){\n    var key, value, resultObj$ = {};\n    for (key in obj) {\n      value = obj[key];\n      resultObj$[camelize(key)] = value;\n    }\n    return resultObj$;\n  };\n  parseString = function(string){\n    var assignOpt, regex, replaceRegex, result, this$ = this;\n    assignOpt = '--?[a-zA-Z][-a-z-A-Z0-9]*=';\n    regex = RegExp('(?:' + assignOpt + ')?(?:\\'(?:\\\\\\\\\\'|[^\\'])+\\'|\"(?:\\\\\\\\\"|[^\"])+\")|[^\\'\"\\\\s]+', 'g');\n    replaceRegex = RegExp('^(' + assignOpt + ')?[\\'\"]([\\\\s\\\\S]*)[\\'\"]$');\n    result = map(function(it){\n      return it.replace(replaceRegex, '$1$2');\n    }, string.match(regex) || []);\n    return result;\n  };\n  main = function(libOptions){\n    var opts, defaults, required, traverse, getOption, parse;\n    opts = {};\n    defaults = {};\n    required = [];\n    if (toString$.call(libOptions.stdout).slice(8, -1) === 'Undefined') {\n      libOptions.stdout = process.stdout;\n    }\n    libOptions.positionalAnywhere == null && (libOptions.positionalAnywhere = true);\n    libOptions.typeAliases == null && (libOptions.typeAliases = {});\n    libOptions.defaults == null && (libOptions.defaults = {});\n    if (libOptions.concatRepeatedArrays != null) {\n      libOptions.defaults.concatRepeatedArrays = libOptions.concatRepeatedArrays;\n    }\n    if (libOptions.mergeRepeatedObjects != null) {\n      libOptions.defaults.mergeRepeatedObjects = libOptions.mergeRepeatedObjects;\n    }\n    traverse = function(options){\n      var i$, len$, option, name, k, ref$, v, type, that, e, parsedPossibilities, parsedType, j$, len1$, possibility, rawDependsType, dependsOpts, dependsType, cra, alias, shortNames, longNames, this$ = this;\n      if (toString$.call(options).slice(8, -1) !== 'Array') {\n        throw new Error('No options defined.');\n      }\n      for (i$ = 0, len$ = options.length; i$ < len$; ++i$) {\n        option = options[i$];\n        if (option.heading == null) {\n          name = option.option;\n          if (opts[name] != null) {\n            throw new Error(\"Option '\" + name + \"' already defined.\");\n          }\n          for (k in ref$ = libOptions.defaults) {\n            v = ref$[k];\n            option[k] == null && (option[k] = v);\n          }\n          if (option.type === 'Boolean') {\n            option.boolean == null && (option.boolean = true);\n          }\n          if (option.parsedType == null) {\n            if (!option.type) {\n              throw new Error(\"No type defined for option '\" + name + \"'.\");\n            }\n            try {\n              type = (that = libOptions.typeAliases[option.type]) != null\n                ? that\n                : option.type;\n              option.parsedType = parseType(type);\n            } catch (e$) {\n              e = e$;\n              throw new Error(\"Option '\" + name + \"': Error parsing type '\" + option.type + \"': \" + e.message);\n            }\n          }\n          if (option['default']) {\n            try {\n              defaults[name] = parseLevn(option.parsedType, option['default']);\n            } catch (e$) {\n              e = e$;\n              throw new Error(\"Option '\" + name + \"': Error parsing default value '\" + option['default'] + \"' for type '\" + option.type + \"': \" + e.message);\n            }\n          }\n          if (option['enum'] && !option.parsedPossiblities) {\n            parsedPossibilities = [];\n            parsedType = option.parsedType;\n            for (j$ = 0, len1$ = (ref$ = option['enum']).length; j$ < len1$; ++j$) {\n              possibility = ref$[j$];\n              try {\n                parsedPossibilities.push(parseLevn(parsedType, possibility));\n              } catch (e$) {\n                e = e$;\n                throw new Error(\"Option '\" + name + \"': Error parsing enum value '\" + possibility + \"' for type '\" + option.type + \"': \" + e.message);\n              }\n            }\n            option.parsedPossibilities = parsedPossibilities;\n          }\n          if (that = option.dependsOn) {\n            if (that.length) {\n              ref$ = [].concat(option.dependsOn), rawDependsType = ref$[0], dependsOpts = slice$.call(ref$, 1);\n              dependsType = rawDependsType.toLowerCase();\n              if (dependsOpts.length) {\n                if (dependsType === 'and' || dependsType === 'or') {\n                  option.dependsOn = [dependsType].concat(slice$.call(dependsOpts));\n                } else {\n                  throw new Error(\"Option '\" + name + \"': If you have more than one dependency, you must specify either 'and' or 'or'\");\n                }\n              } else {\n                if ((ref$ = dependsType.toLowerCase()) === 'and' || ref$ === 'or') {\n                  option.dependsOn = null;\n                } else {\n                  option.dependsOn = ['and', rawDependsType];\n                }\n              }\n            } else {\n              option.dependsOn = null;\n            }\n          }\n          if (option.required) {\n            required.push(name);\n          }\n          opts[name] = option;\n          if (option.concatRepeatedArrays != null) {\n            cra = option.concatRepeatedArrays;\n            if ('Boolean' === toString$.call(cra).slice(8, -1)) {\n              option.concatRepeatedArrays = [cra, {}];\n            } else if (cra.length === 1) {\n              option.concatRepeatedArrays = [cra[0], {}];\n            } else if (cra.length !== 2) {\n              throw new Error(\"Invalid setting for concatRepeatedArrays\");\n            }\n          }\n          if (option.alias || option.aliases) {\n            if (name === 'NUM') {\n              throw new Error(\"-NUM option can't have aliases.\");\n            }\n            if (option.alias) {\n              option.aliases == null && (option.aliases = [].concat(option.alias));\n            }\n            for (j$ = 0, len1$ = (ref$ = option.aliases).length; j$ < len1$; ++j$) {\n              alias = ref$[j$];\n              if (opts[alias] != null) {\n                throw new Error(\"Option '\" + alias + \"' already defined.\");\n              }\n              opts[alias] = option;\n            }\n            ref$ = partition(fn$, option.aliases), shortNames = ref$[0], longNames = ref$[1];\n            option.shortNames == null && (option.shortNames = shortNames);\n            option.longNames == null && (option.longNames = longNames);\n          }\n          if ((!option.aliases || option.shortNames.length === 0) && option.type === 'Boolean' && option['default'] === 'true') {\n            option.negateName = true;\n          }\n        }\n      }\n      function fn$(it){\n        return it.length === 1;\n      }\n    };\n    traverse(libOptions.options);\n    getOption = function(name){\n      var opt, possiblyMeant;\n      opt = opts[name];\n      if (opt == null) {\n        possiblyMeant = closestString(keys(opts), name);\n        throw new Error(\"Invalid option '\" + nameToRaw(name) + \"'\" + (possiblyMeant ? \" - perhaps you meant '\" + nameToRaw(possiblyMeant) + \"'?\" : '.'));\n      }\n      return opt;\n    };\n    parse = function(input, arg$){\n      var slice, obj, positional, restPositional, overrideRequired, prop, setValue, setDefaults, checkRequired, mutuallyExclusiveError, checkMutuallyExclusive, checkDependency, checkDependencies, checkProp, args, key, value, option, ref$, i$, len$, arg, that, result, short, argName, usingAssign, val, flags, len, j$, len1$, i, flag, opt, name, valPrime, negated, noedName;\n      slice = (arg$ != null\n        ? arg$\n        : {}).slice;\n      obj = {};\n      positional = [];\n      restPositional = false;\n      overrideRequired = false;\n      prop = null;\n      setValue = function(name, value){\n        var opt, val, cra, e, currentType;\n        opt = getOption(name);\n        if (opt.boolean) {\n          val = value;\n        } else {\n          try {\n            cra = opt.concatRepeatedArrays;\n            if (cra != null && cra[0] && cra[1].oneValuePerFlag && opt.parsedType.length === 1 && opt.parsedType[0].structure === 'array') {\n              val = [parseLevn(opt.parsedType[0].of, value)];\n            } else {\n              val = parseLevn(opt.parsedType, value);\n            }\n          } catch (e$) {\n            e = e$;\n            throw new Error(\"Invalid value for option '\" + name + \"' - expected type \" + opt.type + \", received value: \" + value + \".\");\n          }\n          if (opt['enum'] && !any(function(it){\n            return deepIs(it, val);\n          }, opt.parsedPossibilities)) {\n            throw new Error(\"Option \" + name + \": '\" + val + \"' not one of \" + naturalJoin(opt['enum']) + \".\");\n          }\n        }\n        currentType = toString$.call(obj[name]).slice(8, -1);\n        if (obj[name] != null) {\n          if (opt.concatRepeatedArrays != null && opt.concatRepeatedArrays[0] && currentType === 'Array') {\n            obj[name] = obj[name].concat(val);\n          } else if (opt.mergeRepeatedObjects && currentType === 'Object') {\n            import$(obj[name], val);\n          } else {\n            obj[name] = val;\n          }\n        } else {\n          obj[name] = val;\n        }\n        if (opt.restPositional) {\n          restPositional = true;\n        }\n        if (opt.overrideRequired) {\n          overrideRequired = true;\n        }\n      };\n      setDefaults = function(){\n        var name, ref$, value;\n        for (name in ref$ = defaults) {\n          value = ref$[name];\n          if (obj[name] == null) {\n            obj[name] = value;\n          }\n        }\n      };\n      checkRequired = function(){\n        var i$, ref$, len$, name;\n        if (overrideRequired) {\n          return;\n        }\n        for (i$ = 0, len$ = (ref$ = required).length; i$ < len$; ++i$) {\n          name = ref$[i$];\n          if (!obj[name]) {\n            throw new Error(\"Option \" + nameToRaw(name) + \" is required.\");\n          }\n        }\n      };\n      mutuallyExclusiveError = function(first, second){\n        throw new Error(\"The options \" + nameToRaw(first) + \" and \" + nameToRaw(second) + \" are mutually exclusive - you cannot use them at the same time.\");\n      };\n      checkMutuallyExclusive = function(){\n        var rules, i$, len$, rule, present, j$, len1$, element, k$, len2$, opt;\n        rules = libOptions.mutuallyExclusive;\n        if (!rules) {\n          return;\n        }\n        for (i$ = 0, len$ = rules.length; i$ < len$; ++i$) {\n          rule = rules[i$];\n          present = null;\n          for (j$ = 0, len1$ = rule.length; j$ < len1$; ++j$) {\n            element = rule[j$];\n            if (toString$.call(element).slice(8, -1) === 'Array') {\n              for (k$ = 0, len2$ = element.length; k$ < len2$; ++k$) {\n                opt = element[k$];\n                if (opt in obj) {\n                  if (present != null) {\n                    mutuallyExclusiveError(present, opt);\n                  } else {\n                    present = opt;\n                    break;\n                  }\n                }\n              }\n            } else {\n              if (element in obj) {\n                if (present != null) {\n                  mutuallyExclusiveError(present, element);\n                } else {\n                  present = element;\n                }\n              }\n            }\n          }\n        }\n      };\n      checkDependency = function(option){\n        var dependsOn, type, targetOptionNames, i$, len$, targetOptionName, targetOption;\n        dependsOn = option.dependsOn;\n        if (!dependsOn || option.dependenciesMet) {\n          return true;\n        }\n        type = dependsOn[0], targetOptionNames = slice$.call(dependsOn, 1);\n        for (i$ = 0, len$ = targetOptionNames.length; i$ < len$; ++i$) {\n          targetOptionName = targetOptionNames[i$];\n          targetOption = obj[targetOptionName];\n          if (targetOption && checkDependency(targetOption)) {\n            if (type === 'or') {\n              return true;\n            }\n          } else if (type === 'and') {\n            throw new Error(\"The option '\" + option.option + \"' did not have its dependencies met.\");\n          }\n        }\n        if (type === 'and') {\n          return true;\n        } else {\n          throw new Error(\"The option '\" + option.option + \"' did not meet any of its dependencies.\");\n        }\n      };\n      checkDependencies = function(){\n        var name;\n        for (name in obj) {\n          checkDependency(opts[name]);\n        }\n      };\n      checkProp = function(){\n        if (prop) {\n          throw new Error(\"Value for '\" + prop + \"' of type '\" + getOption(prop).type + \"' required.\");\n        }\n      };\n      switch (toString$.call(input).slice(8, -1)) {\n      case 'String':\n        args = parseString(input.slice(slice != null ? slice : 0));\n        break;\n      case 'Array':\n        args = input.slice(slice != null ? slice : 2);\n        break;\n      case 'Object':\n        obj = {};\n        for (key in input) {\n          value = input[key];\n          if (key !== '_') {\n            option = getOption(dasherize(key));\n            if (parsedTypeCheck(option.parsedType, value)) {\n              obj[option.option] = value;\n            } else {\n              throw new Error(\"Option '\" + option.option + \"': Invalid type for '\" + value + \"' - expected type '\" + option.type + \"'.\");\n            }\n          }\n        }\n        checkMutuallyExclusive();\n        checkDependencies();\n        setDefaults();\n        checkRequired();\n        return ref$ = camelizeKeys(obj), ref$._ = input._ || [], ref$;\n      default:\n        throw new Error(\"Invalid argument to 'parse': \" + input + \".\");\n      }\n      for (i$ = 0, len$ = args.length; i$ < len$; ++i$) {\n        arg = args[i$];\n        if (arg === '--') {\n          restPositional = true;\n        } else if (restPositional) {\n          positional.push(arg);\n        } else {\n          if (that = arg.match(/^(--?)([a-zA-Z][-a-zA-Z0-9]*)(=)?(.*)?$/)) {\n            result = that;\n            checkProp();\n            short = result[1].length === 1;\n            argName = result[2];\n            usingAssign = result[3] != null;\n            val = result[4];\n            if (usingAssign && val == null) {\n              throw new Error(\"No value for '\" + argName + \"' specified.\");\n            }\n            if (short) {\n              flags = chars(argName);\n              len = flags.length;\n              for (j$ = 0, len1$ = flags.length; j$ < len1$; ++j$) {\n                i = j$;\n                flag = flags[j$];\n                opt = getOption(flag);\n                name = opt.option;\n                if (restPositional) {\n                  positional.push(flag);\n                } else if (i === len - 1) {\n                  if (usingAssign) {\n                    valPrime = opt.boolean ? parseLevn([{\n                      type: 'Boolean'\n                    }], val) : val;\n                    setValue(name, valPrime);\n                  } else if (opt.boolean) {\n                    setValue(name, true);\n                  } else {\n                    prop = name;\n                  }\n                } else if (opt.boolean) {\n                  setValue(name, true);\n                } else {\n                  throw new Error(\"Can't set argument '\" + flag + \"' when not last flag in a group of short flags.\");\n                }\n              }\n            } else {\n              negated = false;\n              if (that = argName.match(/^no-(.+)$/)) {\n                negated = true;\n                noedName = that[1];\n                opt = getOption(noedName);\n              } else {\n                opt = getOption(argName);\n              }\n              name = opt.option;\n              if (opt.boolean) {\n                valPrime = usingAssign ? parseLevn([{\n                  type: 'Boolean'\n                }], val) : true;\n                if (negated) {\n                  setValue(name, !valPrime);\n                } else {\n                  setValue(name, valPrime);\n                }\n              } else {\n                if (negated) {\n                  throw new Error(\"Only use 'no-' prefix for Boolean options, not with '\" + noedName + \"'.\");\n                }\n                if (usingAssign) {\n                  setValue(name, val);\n                } else {\n                  prop = name;\n                }\n              }\n            }\n          } else if (that = arg.match(/^-([0-9]+(?:\\.[0-9]+)?)$/)) {\n            opt = opts.NUM;\n            if (!opt) {\n              throw new Error('No -NUM option defined.');\n            }\n            setValue(opt.option, that[1]);\n          } else {\n            if (prop) {\n              setValue(prop, arg);\n              prop = null;\n            } else {\n              positional.push(arg);\n              if (!libOptions.positionalAnywhere) {\n                restPositional = true;\n              }\n            }\n          }\n        }\n      }\n      checkProp();\n      checkMutuallyExclusive();\n      checkDependencies();\n      setDefaults();\n      checkRequired();\n      return ref$ = camelizeKeys(obj), ref$._ = positional, ref$;\n    };\n    return {\n      parse: parse,\n      parseArgv: function(it){\n        return parse(it, {\n          slice: 2\n        });\n      },\n      generateHelp: generateHelp(libOptions),\n      generateHelpForOption: generateHelpForOption(getOption, libOptions)\n    };\n  };\n  main.VERSION = VERSION;\n  module.exports = main;\n  function import$(obj, src){\n    var own = {}.hasOwnProperty;\n    for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n    return obj;\n  }\n}).call(this);\n"]}