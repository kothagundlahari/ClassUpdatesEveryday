{"version":3,"sources":["../../../../qreact-app/src/lib/todoHelpers.test.js"],"names":["test","startTodos","id","name","isComplete","newTodo","expected","result","expect","toEqual","not","toBe"],"mappings":";;AAGA;;AAEAA,KAAK,gDAAL,EAAuD,YAAM;AACzD,QAAMC,aAAa,CACf,EAACC,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EADe,EAEf,EAACF,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EAFe,CAAnB;AAIA,QAAMC,UAAU,EAACH,IAAG,CAAJ,EAAOC,MAAM,OAAb,EAAsBC,YAAY,KAAlC,EAAhB;AACA,QAAME,WAAW,CACb,EAACJ,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EADa,EAEb,EAACF,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EAFa,EAGb,EAACF,IAAG,CAAJ,EAAOC,MAAM,OAAb,EAAsBC,YAAY,KAAlC,EAHa,CAAjB;;AAMA,QAAMG,SAAS,0BAAQN,UAAR,EAAoBI,OAApB,CAAf;;AAEAG,WAAOD,MAAP,EAAeE,OAAf,CAAuBH,QAAvB;AACH,CAfD,E,CALA;;;;;AAuBAN,KAAK,mDAAL,EAA0D,YAAM;AAC5D,QAAMC,aAAa,CACf,EAACC,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EADe,EAEf,EAACF,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EAFe,CAAnB;AAIA,QAAMC,UAAU,EAACH,IAAG,CAAJ,EAAOC,MAAM,OAAb,EAAsBC,YAAY,KAAlC,EAAhB;AACA,QAAME,WAAW,CACb,EAACJ,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EADa,EAEb,EAACF,IAAG,CAAJ,EAAOC,MAAM,KAAb,EAAoBC,YAAY,KAAhC,EAFa,EAGb,EAACF,IAAG,CAAJ,EAAOC,MAAM,OAAb,EAAsBC,YAAY,KAAlC,EAHa,CAAjB;;AAMA,QAAMG,SAAS,0BAAQN,UAAR,EAAoBI,OAApB,CAAf;;AAEAG,WAAOD,MAAP,EAAeG,GAAf,CAAmBC,IAAnB,CAAwBV,UAAxB;AAEH,CAhBD","file":"todoHelpers.test.js","sourcesContent":["/**\n * Created by hari on 6/12/17.\n */\nimport {addTodo} from './todoHelpers'\n\ntest('addTodo should add the passed todo to the list', () => {\n    const startTodos = [\n        {id:1, name: 'one', isComplete: false},\n        {id:2, name: 'two', isComplete: false}\n    ];\n    const newTodo = {id:3, name: 'three', isComplete: false}\n    const expected = [\n        {id:1, name: 'one', isComplete: false},\n        {id:2, name: 'two', isComplete: false},\n        {id:3, name: 'three', isComplete: false}\n    ];\n\n    const result = addTodo(startTodos, newTodo)\n\n    expect(result).toEqual(expected)\n});\n\n\ntest('addTodo should not mutate the existing todo array', () => {\n    const startTodos = [\n        {id:1, name: 'one', isComplete: false},\n        {id:2, name: 'two', isComplete: false}\n    ]\n    const newTodo = {id:3, name: 'three', isComplete: false}\n    const expected = [\n        {id:1, name: 'one', isComplete: false},\n        {id:2, name: 'two', isComplete: false},\n        {id:3, name: 'three', isComplete: false}\n    ]\n\n    const result = addTodo(startTodos, newTodo)\n\n    expect(result).not.toBe(startTodos)\n\n})"]}